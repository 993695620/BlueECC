{"Structs/ECSignature.html#/s:10CryptorECC11ECSignatureV1r10Foundation4DataVvp":{"name":"r","abstract":"<p>The r value of the signature.","parent_name":"ECSignature"},"Structs/ECSignature.html#/s:10CryptorECC11ECSignatureV1s10Foundation4DataVvp":{"name":"s","abstract":"<p>The s value of the signature.","parent_name":"ECSignature"},"Structs/ECSignature.html#/s:10CryptorECC11ECSignatureV4asn110Foundation4DataVvp":{"name":"asn1","abstract":"<p>The r and a values of the signature encoded into an ASN1 sequence.</p>","parent_name":"ECSignature"},"Structs/ECSignature.html#/s:10CryptorECC11ECSignatureV1r1sAC10Foundation4DataV_AHtKcfc":{"name":"init(r:s:)","abstract":"<p>Initialize an ECSignature by providing the r and s values.<br>","parent_name":"ECSignature"},"Structs/ECSignature.html#/s:10CryptorECC11ECSignatureV4asn1AC10Foundation4DataV_tKcfc":{"name":"init(asn1:)","abstract":"<p>Initialize an ECSignature by providing an ASN1 encoded sequence containing the r and s values.</p>","parent_name":"ECSignature"},"Structs/ECSignature.html#/s:10CryptorECC11ECSignatureV6verify9plaintext5usingSbSS_AA11ECPublicKeyCtF":{"name":"verify(plaintext:using:)","abstract":"<p>Verify the signature for a given String using the provided public key.</p>","parent_name":"ECSignature"},"Structs/ECSignature.html#/s:10CryptorECC11ECSignatureV6verify9plaintext5usingSb10Foundation4DataV_AA11ECPublicKeyCtF":{"name":"verify(plaintext:using:)","abstract":"<p>Verify the signature for the given Data using the provided public key.</p>","parent_name":"ECSignature"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV20localizedDescriptionSSvp":{"name":"localizedDescription","abstract":"<p>A human readable description of the error.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV16invalidPEMStringACvpZ":{"name":"invalidPEMString","abstract":"<p>Error thrown when an invalid PEM String used to initialize a key.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV16unknownPEMHeaderACvpZ":{"name":"unknownPEMHeader","abstract":"<p>Error thrown when the PEM header is not recognized.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV20failedBase64EncodingACvpZ":{"name":"failedBase64Encoding","abstract":"<p>Error thrown when a String fails to be Base64 encoded.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV18failedASN1DecodingACvpZ":{"name":"failedASN1Decoding","abstract":"<p>Error thrown when the ASN1 data could not be decoded to the expected structure.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV16unsupportedCurveACvpZ":{"name":"unsupportedCurve","abstract":"<p>Error thrown when the key&rsquo;s object identifier is for a curve that is not supported.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV23failedNativeKeyCreationACvpZ":{"name":"failedNativeKeyCreation","abstract":"<p>Error thrown when the key could not be converted to a native key (<code>SecKey</code> for Apple, <code>EC_KEY</code> for linux).</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV13failedEvpInitACvpZ":{"name":"failedEvpInit","abstract":"<p>Error thrown when the encryption envelope fails to initialize.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV22failedSigningAlgorithmACvpZ":{"name":"failedSigningAlgorithm","abstract":"<p>Error thrown when the signing algorithm could not create the signature.</p>","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV15invalidRSLengthACvpZ":{"name":"invalidRSLength","abstract":"<p>Error thrown when the provided R and S Data was not a valid length.","parent_name":"ECError"},"Structs/ECError.html#/s:10CryptorECC7ECErrorV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Function to check if ECSigningErrors are equal. Required for equatable protocol.</p>","parent_name":"ECError"},"Structs/ECError.html":{"name":"ECError","abstract":"<p>A struct representing the different errors that can be thrown by CryptorECC.</p>"},"Structs/ECSignature.html":{"name":"ECSignature","abstract":"<p>The signature produced by applying Elliptic Curve Digital Signature Algorithm"},"Protocols/ECSignable.html#/s:10CryptorECC10ECSignableP4sign4withAA11ECSignatureVAA12ECPrivateKeyC_tKF":{"name":"sign(with:)","abstract":"<p>Sign the object using ECDSA and produce an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ECSignature.html\">ECSignature</a></code>.</p>","parent_name":"ECSignable"},"Protocols/ECSignable.html":{"name":"ECSignable","abstract":"<p>A protocol for signing an instance of some object to generate an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ECSignature.html\">ECSignature</a></code>.</p>"},"Extensions/Data.html#/s:10Foundation4DataV10CryptorECCE4sign4withAD11ECSignatureVAD12ECPrivateKeyC_tKF":{"name":"sign(with:)","abstract":"<p>Sign the plaintext data using the provided <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ECPrivateKey.html\">ECPrivateKey</a></code>.","parent_name":"Data"},"Extensions/String.html#/s:SS10CryptorECCE4sign4withAA11ECSignatureVAA12ECPrivateKeyC_tKF":{"name":"sign(with:)","abstract":"<p>UTF8 encode the String to Data and sign it using the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ECPrivateKey.html\">ECPrivateKey</a></code>.","parent_name":"String"},"Extensions/String.html":{"name":"String","abstract":"<p>Extension for signing a <code>String</code> by converting it to utf8 Data and signing the bytes.</p>"},"Extensions/Data.html":{"name":"Data","abstract":"<p>Extension for signing <code>Data</code> with an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/ECPrivateKey.html\">ECPrivateKey</a></code> and the algorithm determined by the key&rsquo;s curve.</p>"},"Classes/ECPublicKey.html#/s:10CryptorECC11ECPublicKeyC3keyACSS_tKcfc":{"name":"init(key:)","abstract":"<p>Initialize an ECPublicKey from a <code>.pem</code> file format.</p>","parent_name":"ECPublicKey"},"Classes/ECPublicKey.html#/s:10CryptorECC11ECPublicKeyC3derAC10Foundation4DataV_tKcfc":{"name":"init(der:)","abstract":"<p>Initialize an ECPublicKey from <code>.der</code> file data.</p>","parent_name":"ECPublicKey"},"Classes/ECPrivateKey.html#/s:10CryptorECC12ECPrivateKeyC3keyACSS_tKcfc":{"name":"init(key:)","abstract":"<p>Initialize an ECPrivateKey from a PEM String.","parent_name":"ECPrivateKey"},"Classes/ECPrivateKey.html#/s:10CryptorECC12ECPrivateKeyC8pkcs8DERAC10Foundation4DataV_tKcfc":{"name":"init(pkcs8DER:)","abstract":"<p>Initialize an ECPrivateKey from a PKCS8 <code>.der</code> file data.</p>","parent_name":"ECPrivateKey"},"Classes/ECPrivateKey.html#/s:10CryptorECC12ECPrivateKeyC7sec1DERAC10Foundation4DataV_tKcfc":{"name":"init(sec1DER:)","abstract":"<p>Initialize an ECPrivateKey from a SEC1 formatted <code>.der</code> file data:</p>","parent_name":"ECPrivateKey"},"Classes/ECPrivateKey.html":{"name":"ECPrivateKey","abstract":"<p>A class representing an Elliptic curve private key.<br>"},"Classes/ECPublicKey.html":{"name":"ECPublicKey","abstract":"<p>A class representing an elliptic curve public key."},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}